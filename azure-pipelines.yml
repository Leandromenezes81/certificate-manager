# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml
variables:
- name: isDeploy
  value: $[or(eq(variables['Build.SourceBranchName'], 'main'), eq(variables['Build.SourceBranchName'], 'develop'))]
- ${{ if eq(variables['Build.SourceBranchName'], 'main' ) }}:
  - group: 'certificate-manager-manager-prd'
- ${{ if eq(variables['Build.SourceBranchName'], 'develop' ) }}:
  - group: 'certificate-manager-manager-dev'

trigger:
- develop
- main
- feat/*

pool:
  vmImage: ubuntu-latest

steps:
- script: |
    ./mvnw clean package
  displayName: 'Build application'
  continueOnError: false

- script: |
    curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
    unzip awscliv2.zip
    sudo ./aws/install --update
    aws --version
    pip install awsebcli --upgrade --user
    eb --version
  displayName: 'Install AWS CLI'
  condition: eq(variables.isDeploy, 'true')
  continueOnError: false
  retryCountOnTaskFailure: 1
  
- script: |
    aws configure set aws_access_key_id $(aws_access_key_id)
    aws configure set aws_secret_access_key $(aws_secret_access_key)
  displayName: 'Configure AWS CLI'
  condition: eq(variables.isDeploy, 'true')
  continueOnError: false

- script: |
    echo "Branch name: $BRANCH_NAME"
    echo "Build number: $BUILD_NUMBER"

    if [ $BRANCH_NAME = "develop" ]; then
        eb deploy certificate-manager-env-dev --label=certificate-manager-env-dev-$BUILD_NUMBER --timeout 600
    fi

    if [ $BRANCH_NAME = "main" ]; then
        eb deploy certificate-manager-env-prd --label=certificate-manager-env-prd-$BUILD_NUMBER --timeout 600
    fi
  displayName: 'Deploy'
  env:
    BUILD_NUMBER: $(Build.BuildNumber)
    BRANCH_NAME:  $(Build.SourceBranchName)
  condition: eq(variables.isDeploy, 'true')
  continueOnError: false